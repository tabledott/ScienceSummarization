k whether there is a path between two nodes for the LEFT-ARCI and RIGHT-ARCI transitions of the non-projective list-based algorithm.
    Maintaining the information needed for this check and updating it with each addition of a new arc to the graph is equivalent to the union-find operations for disjoint set data structures.
    Using the techniques of path compression and union by rank, the amortized time per operation is O(&#945;(n)) per operation, where n is the number of elements (nodes in this case) and &#945;(n) is the inverse of the Ackermann function, which means that &#945;(n) is less than 5 for all remotely practical values of n and is effectively a small constant (Cormen, Leiserson, and Rivest 1990).
    With this proviso, all the complexity results from Sections 4 and 5 can be regarded as valid also for the classifier-based implementation of deterministic, incremental dependency parsing.
    Table 3 shows the parsing accuracy obtained for each of the 7 parsers on each of the 13 languages, as well as