 learns surface patterns to extract more instances.
    The key to Espresso lies in its use of generic patters, i.e., those broad coverage noisy patterns that extract both many correct and incorrect relation instances.
    For example, for part-of relations, the pattern &#8220;X of Y&#8221; extracts many correct relation instances like &#8220;wheel of the car&#8221; but also many incorrect ones like &#8220;house of representatives&#8221;.
    The key assumption behind Espresso is that in very large corpora, like the Web, correct instances generated by a generic pattern will be instantiated by some reliable patterns, where reliable patterns are patterns that have high precision but often very low recall (e.g., &#8220;X consists of Y&#8221; for part-of relations).
    In this section, we describe the overall architecture of Espresso, propose a principled measure of reliability, and give an algorithm for exploiting generic patterns.
    Espresso iterates between the following three phases: pattern induction, pat