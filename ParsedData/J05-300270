ts and ill-formed texts, guiding the selection of sentence paraphrases to achieve an optimal sentence sequence.
  
  
    Function: EdgeSim(edge1, edge2) Returns: The similarity score of two input edges based on their type begin if type of(edge1) = type of(edge2) = &#8216;subject-verb&#8217; then return SUBJECT VERB SCORE; if is phrase (node1) or is phrase (node2) then All the comparison functions employ memoization, implemented by hash table wrappers.
    Function: MapChildren(tree1, tree2) memoized Returns: Given two dependency trees, MapChildren finds the optimal alignment of tree children.
    The function returns the score of the alignment and the mapping itself. begin /*Generate all legitimate mappings between the children on tree1 and tree2 */ all-maps &lt;-- GenerateAllPermutations (tree1, tree2) ; best &lt;-- (&#8722;1, void) ; /*Compute the score of each mapping, and select the one with the highest score */ + Sim (subtree (tree1, s1), (subtree (tree2, s2)); Function: NodeCompare(tree1, tree2) memoiz