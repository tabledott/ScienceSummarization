s were not performed due to time constraints.
			3 We append a ?virtual root?
			word to the beginning of every sentence, which is used as the head of every word in the dependency structure that does not have a head in the sentence.
			1045 two top items in S (s1 and s2) are popped, and a new item is pushed onto S. This new item is a tree formed by making the root s1 of a dependent of the root of s2, or the root of s2 a dependent of the root of s1.
			Depending on which of these two cases oc cur, we call the action reduce-left or reduce-right, according to whether the head of the new tree is to the left or to the right its new dependent.
			In addi tion to deciding the direction of a reduce action, the label of the newly formed dependency arc must also be decided.
			Parsing terminates successfully when Q is emp ty (all words in the input have been processed) and S contains only a single tree (the final dependency tree for the input sentence).
			If Q is empty, S contains two or more items, and no further red