e also have a dependency structure for the sentence.
    In fact, the binary reduce actions are very similar to the reduce actions in the dependency parser of Nivre and Scholz (2004), but they are executed in a different order, so constituents can be built.
    If W is empty, and more than one item remain in S, and no further reduce actions take place, the input string is rejected.
    A parser based on the algorithm described in the previous section faces two types of decisions to be made throughout the parsing process.
    The first type concerns whether to shift or reduce when both actions are possible, or whether to reduce or reject the input when only reduce actions are possible.
    The second type concerns what syntactic structures are created.
    Specifically, what new non-terminal is introduced in unary or binary reduce actions, or which of the left or right children are chosen as the source of the lexical head of the new subtree produced by binary reduce actions.
    Traditionally, these decisions 