g a complete algorithm remains useful.
    First, a complete and sound algorithm provides a benchmark against which other approaches can be tested.
    Second, one may actually wish to use a generate-and-test mechanism in simpler implementations, and it should be correct and as efficient as possible.
    It should not generate scopings that can be ruled out on purely structural grounds.
    Finally, the algorithm we present might be modified to incorporate heuristics to generate scopings in a certain order or only certain of the scopings.
    The soundness and correctness of the underlying algorithm, provide a guarantee of soundness for a heuristically guided version.
    We include a few comments below about incorporating ordering heuristics into our scoping generation algorithm, although we should point out that the possibilities are somewhat limited due to the local nature of where the heuristics can be applied.
    A full discussion of heuristically-guided scoping generation is, of course, beyond the scop