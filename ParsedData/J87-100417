d, we push pointers to a node of the shared forest.4 When the parser &amp;quot;shifts&amp;quot; a word, it creates a leaf node labeled with the word and the pre-terminal, and, instead of the pre-terminal symbol, a pointer to the newly created leaf node is pushed onto the stack. lithe exact same leaf node (i.e., the node labeled with the same word and the same pre-terminal) already exists, a pointer to this existing node is pushed onto the stack, without creating another node.
    When the parser &amp;quot;reduces&amp;quot; the stack, it pops pointers from the stack, creates a new node whose successive nodes are pointed to by those popped pointers, and pushes a pointer to the newly created node onto the stack.
    Using this relatively simple procedure, our parsing algorithm can produce the shared forest as its output without any other special book-keeping mechanism, because it never does the same reduce action twice in the same manner.
    We say that two or more subtrees represent local ambiguity if they hav