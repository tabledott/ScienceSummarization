re applied to a corpus in a left-to-right fashion, they are allowed only one pass in which to properly classify.
    Since a transformation list is a processor and not a classifier, it can readily be used as a postprocessor to any annotation system.
    In addition to annotating from scratch, rules can be learned to improve the performance of a mature annotation system by using the mature system as the initial-state annotator.
    This can have the added advantage that the list of transformations learned using a mature annotation system as the initial-state annotator provides a readable description or classification of the errors the mature system makes, thereby aiding in the refinement of that system.
    The fact that it is a processor gives a transformation-based learner greater than the classifier-based decision tree.
    For example, in applying transformation-based learning to parsing, a rule can apply any structural change to a tree.
    In tagging, a rule such as: Change the tag of the current word to