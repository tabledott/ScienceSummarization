  LSH functions involve the creation of short signatures (fingerprints) for each vector in space such that those vectors that are closer to each other are more likely to have similar fingerprints.
    LSH functions are generally based on randomized algorithms and are probabilistic.
    We present LSH algorithms that can help reduce the time complexity of calculating our distance similarity atrix to nk.
    Rabin (1981) proposed the use of hash functions from random irreducible polynomials to create short fingerprint representations for very large strings.
    These hash function had the nice property that the fingerprint of two identical strings had the same fingerprints, while dissimilar strings had different fingerprints with a very small probability of collision.
    Broder (1997) first introduced LSH.
    He proposed the use of Min-wise independent functions to create fingerprints that preserved the Jaccard similarity between every pair of vectors.
    These techniques are used today, for example, to elim