ining also enables us to incorporate more features, where we found more lookahead features (q2) results in another +0.3% improvement.
    Table 3 presents the final test results of our DP parser on the Penn English Treebank, compared with other state-of-the-art parsers.
    Our parser achieves the highest (unlabeled) dependency accuracy among dependency parsers trained on the Treebank, and is also much faster than most other parsers even with a pure Python implementation parser (in pure Python) has the highest accuracy among dependency parsers trained on the Treebank, and is also much faster than major parsers.
    &#8224;converted from constituency trees.
    C=C/C++, Py=Python, Ja=Java.
    Time is in seconds per sentence.
    Search spaces: &#8225;linear; others exponential.
    (on a 3.2GHz Xeon CPU).
    Best-performing constituency parsers like Charniak (2000) and Berkeley (Petrov and Klein, 2007) do outperform our parser, since they consider more information during parsing, but they are at least 5 time