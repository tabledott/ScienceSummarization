, so as to de-emphasize the input-output connotation as discussed above.
    A simple transduction grammar can be written by marking every terminal symbol for a particular output stream.
    Thus, each rewrite rule emits not one but two streams.
    For example, a rewrite rule of the form A &#8212;&gt; Bxiy2Czi means that the terminal symbols x and z are symbols of the language L1 emitted on stream 1, while y is a symbol of A simple transduction grammar (a) and an inverted-orientation production (b). the language L2 emitted on stream 2.
    It follows that every nonterminal stands for a class of derivable substring pairs.
    We can use a simple transduction grammar to model the generation of bilingual sentence pairs.
    As a mnemonic convention, we usually use the alternative notation A --&#247; BxlyCzle to associate matching output tokens.
    Though this additional information has no formal generative effect, it reminds us that xly must be a valid entry in the translation lexicon.
    We call a matched te