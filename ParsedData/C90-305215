s the same power as PI~OLOG to synthesize unspecified arguments, and the same evaluation mechanism can be used for both generation and parsing, depending on the input.
  295 4.4 From DCG to HPSG In the following, we explain how one can general- ize the principles used for describing a DCG gram- mar in TFS to write an HPSG-like grammar.
  HPSG linguistic objects of all kinds, be they syntactic, phrase-structural, or semantic, are modeled by fea- ture structures [14].
  In addition, HPSG relies heavily on the notion of type.
  Hence, TFS is perfectly suited for an implementation f HPSG.
  The grammar itself is purely declarative in the sense that it characterizes what constraints should hold on linguistic objects in- dependently of the order in which these constraints are actually applied.
  We first generalize the description of linguistic struc- tures: instead of defining explicit types for sen- tences, noun phrases, etc., we define a generic con- stituent structure for any kind of phrase.
  According to the 