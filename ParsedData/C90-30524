g a type.
  We write feature names in small caps letters (v, ~, u), type symbols in upper case letters (A, B), and we use symbols inside a box [~, called tags, for denoting shared values.
  For cxarnple, the typed FS, written in a linear form A[F: [[]B[H: C],a: ~]], is an FS of type A with two features f." and e, v having as a value tile typed FS B[H: A] and G having the same shared value aS F. In the system, one can specify type definitions which can, as a first approximation, be seen as a kind of template definition like in e.g.
  There is, however, a major difference.
  The system uses a type inference mechanism to derive new types dy- namically during computation whereas templates in PATR-II are expanded statically at compile time.
  A type that encodes agreement features can be writ- ten: AGR = [num: NUM,gender: GEN] and types NtJM and GEN being themselves defined as NUM = SING V PLUR (where the symbol "y" denotes the logical OR) and GEN : MASC V FEM V NEU.
  The types  NUM, SG,... do not have definition