 blocks plus one.
    Thus, the block movements can equivalently be expressed as long jump operations that jump over the gaps between two blocks.
    The costs of a long jump are constant.
    The blocks are read in the order of one of the sentences.
    These long jumps are combined with the &#8220;classical&#8221; Levenshtein edit operations, namely insertion, deletion, substitution, and the zero-cost operation identity.
    The resulting long jump distance dLJ gives the minimum number of operations which are necessary to transform the candidate sentence into the reference sentence.
    Like the Levenshtein distance, the long jump distance can be depicted using an alignment grid as shown in Figure 1: Here, each grid point corresponds to a pair of inter-word positions in candidate and reference sentence, respectively. dLJ is the minimum cost of a path between the lower left (first) and the upper right (last) alignment grid point which covers all reference and candidate words.
    Deletions and insertions cor