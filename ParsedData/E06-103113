 the search algorithm in Section 3.2 will find the optimum for this sum.
    Absolute Miscoverage Let coverage(i) be the number of substitution, identity, and deletion edges that cover a candidate word ei in a dCD path.
    If we had a complete and disjoint alignment for the candidate word (i.e., a dLJ path), coverage(i) would be 1 for each i.
    In general this is not the case.
    We can use the absolute miscoverage as a penalty lpmisc for dCD: Each of these steps can be done in time O(I).
    Therefore, this algorithm calculates dCD in time O(I &#183; L) and space O(I).
    As the CDER does not penalize candidate translations which are too long, we studied the use of a length penalty or miscoverage penalty.
    This determines the difference in sentence lengths between candidate and reference.
    Two definitions of such a penalty have been studied for this work.
    This miscoverage penalty is not independent of the alignment path.
    Consequently, the proposed search algorithm will not necessarily find