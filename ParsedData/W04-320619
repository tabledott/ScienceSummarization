trees P1 and P2 of two sentences and their related compact representation G2 are shown in Figure 2.
    Building the compact graph representation The compact graph representation is built incrementally.
    The algorithm starts with an empty aggregate graph G0 and then merges the sentence graphs from S one at a time into the aggregate structure.
    Let&#8217;s denote the current aggregate graph with Gi_1(Vg, Eg) and let Pi(Vp, Ep) be the parse graph which will be merged next.
    Note that the sentence set of Pi is a single element set W. During each iteration a new graph is created as the union of both input graphs: Gi = Gi_1 U Pi.
    Then, the following merging procedure is performed on the elements of Gi ated and added to Gi.
    The new vertex takes the same label and holds a sentence set which is formed from the sentence set of vg by adding i to it.
    Still with reference to Figure 2, the generalized vertices in G2 are &#8216;X&#8217;, &#8216;Y&#8217; and &#8216;stop&#8217;.
    The algorithm connect