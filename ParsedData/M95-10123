or phraser as we call it, the input text must be tagged for part-of-speech .
  This part-of-speech tagging is the principal role of the UNIX preprocess, and it is itself supported by a number of pretaggers (e .g., for labeling dates and title words) and zoners (e.g., for word tokenization, sentence boundary determination and headline segmentation) .
  The phrases that are parsed by the phraser are subsequently mapped to facts in the inferential database, a mapping mediated by a simple semantic interpreter .
  We then exploit inference to instantiate domai n Syntactic analysis (Lisp)  Tractable inference (Lisp) IL  u  u NE markup  TE templates  5T templates Figure 1 : Coarse-grained system architecture .
  UNIX preprocess 141 Template Printing gazetteer Figure 2 : Processing modules in Alembic.
  constraints and resolve restricted classes of coreference .
  The inference system also supports equality reasonin g by congruence closure, and this equality machinery is in turn exploited to perform TE-specific proce