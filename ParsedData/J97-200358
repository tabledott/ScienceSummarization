me algorithm based on a topological sort of the graph allows one to obtain d. Once the function d is defined, the transformation of T into T' can be done in linear time, namely 0(1(21+IED, if we denote by E the set of transitions of T. The complexity of pushing is therefore linear (0(1Q1+1E1)) if the transducer is acyclic.
    In the general case, the complexity of pushing is 0(1Ellog IQ') if we use classical heaps, 0(1E1 + IQ' log 1 (21 ) if we use Fibonacci heaps, and 0(1Ellog log IQ) if we use the efficient implementation of priority queues by Thorup (1996).
    In case the maximum output weight W is small, we can use the algorithm of Ahuja et al. (1988); the complexity of pushing is then 0(1E1+ 1(21-0w1).
    In case the transducer is acyclic, we can use a specific automata minimization algorithm (Revuz 1992) with linear time complexity, 0(1(21 + 1E1).
    In the general case, an efficient implementation of Hoperoft's algorithm (Aho, Hoperoft, and Ullman 1974) leads to 0(1ElloglQ1).
    Thus, the overall 