there are two different computations that take Nivre Deterministic Incremental Dependency Parsing place: the first is the classifier returning a transition t as the output class for an input feature vector &#934;(c), and the second is a check whether the preconditions of t are satisfied in c. If the preconditions are satisfied, the transition t is performed; otherwise a default transition (with no preconditions) is performed instead.8 (The default transition is SHIFT for the stack-based algorithms and NO-ARC for the list-based algorithms.)
    The time required to compute the classification t of &#934;(c) depends on properties of the classifier, such as the number of support vectors and the number of classes for a multi-class SVM classifier, but is independent of the length of the input and can therefore be regarded as a constant as far as the time complexity of the parsing algorithm is concerned.9 The check of preconditions is a trivial constant-time operation in all cases except one, namely the need to chec