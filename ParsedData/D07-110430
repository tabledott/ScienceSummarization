e same as the one used for large-scale experiments by Chiang et al (2005).
			To generate alignments,we used GIZA++ (Och and Ney, 2003).
			We symmetrized bidirectional alignments using the grow diag-final heuristic (Koehn et al, 2003).
			0 0 0 1000 0 Number of frequent subpatterns Insert text here 41 sec/sent 41 seconds 405 sec/sent 0 MB.
			725MB Figure 3: Effect of precomputation on memory useand processing time.
			Here we show only the mem ory requirements of the precomputed collocations.
			We used the first 50 sentences of the NIST 2003test set to compute timing results.
			All of our algo rithms were implemented in Python 2.4.
			10 Timingresults are reported for machines with 8GB of mem ory and 4 3GHz Xeon processors running Red Hat linux 2.6.9.
			In order to understand the contributions of various improvements, we also ran the system with with various ablations.
			In the default setting, the prefix tree is constructed for each sentence to guide phrase lookup, and then discarded.
			To showthe eff