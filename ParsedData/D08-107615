visited at most three times.
    The first time is when it is picked by the outer loop.
    The second time is when it either gets discarded or when it terminates the inner loop.
    Whenever a line object is visited for the third time, it is irrevocably removed from the envelope.
    The runtime complexity is therefore dominated by the initial sorting and amounts to Op (K log Kq) Topological sort on a phrase lattice _ (V, Eq) can be performed in time O (I V I + 1E|q 1) .
    As will be shown in Section 4, the size of the upper envelope for G can never exceed the size of the arc set E. The same holds for any subgraph Gr[,,v] of G which is induced by the paths that connect the source node s with vPV.
    Since the envelopes propagated from the source to the sink node can only increase linearly in the number of previously processed arcs, the total running time amounts to a worst case complexity of Op|VE|log|E|q.
  
  
    The memory efficiency of the suggested algorithm results from the following theorem which 