 and shallow language understanding tasks.
    Here, we discuss only the latter representation; see (de Marneffe et al., 2006) for a discussion of both options and the precise relationship between them.
    The intended use cases of usability by people who are not (computational) linguists and suitability for relation extraction applications led SD to try to adhere to the following design principles (DPs): We illustrate many of them in the rest of this section, using example sentences which were made available for the Parser Evaluation Shared Task.
    The grammatical relations of SD are arranged in a hierarchy, rooted with the most generic relation, dependent.
    The hierarchy contains 56 grammatical relations.
    When the relation between a head and its dependent can be identified more precisely, relations further down in the hierarchy are used, but when it is unclear, more generic dependencies are possible (DP1, DP4).
    For example, the dependent relation can be specialized to aux (auxiliary), arg (arg