m creates a leaf node in the parse forest labeled with the word / and its preterminal *n, and pushes a pointer to the leaf node onto the stack.
    The next action, &amp;quot;reduce 3, is determined from the action table.
    Next Word = 'saw' 0 0 4 9-11F-40 (p.31 0 [6n ' I' ] We reduce the stack basically in the same manner as standard LR parsing.
    It pops the top vertex &amp;quot;4&amp;quot; and the pointer &amp;quot;0&amp;quot; from the stack, and creates a new node in the parse forest whose successor is the node pointed to by the pointer.
    The newly created node is labeled with the left-hand side symbol of rule 3, namely &amp;quot;NP&amp;quot;.
    The pointer to this newly created node, namely &amp;quot;1&amp;quot;, is pushed onto the stack.
    The action, &amp;quot;shift 7&amp;quot;, is determined as the next action.
    Now, we have At this point, we encounter a multiple entry, &amp;quot;reduce 7&amp;quot; and &amp;quot;shift 6&amp;quot;, and both actions are to be executed.
    Reduce actions a