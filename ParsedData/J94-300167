 (finite) strings that belong to this language are those that contain no instances of A at all!
    To correctly identify and mark left-contexts, the bracket following a A&lt; instance must not be ignored.
    Thus, the requisite set of strings is the regular language Leftcontext(A, &lt;,&gt;), where the Leftcontext operator is defined as follows: We parameterize this operator for the left-context pattern and the actual brackets so that it can be used in other definitions below.
    The other complication arises in rules intended to insert or delete material in the string, so that either 0 or 1/) includes the empty string E. Consider the left-to-right rule Iterated applications of this rule can delete an arbitrary sequence of a's, converting strings of the form baaaa.
    .
    . a into simply b.
    The single b at the beginning serves as left-context for applications of the rule to each of the subsequent a's.
    This presents a problem for the constructions we have developed so far: The Replace relation re