he recursive process of rightmost extension, we always maintain the temporally suboptimal gain &#964; among all gains calculated previously.
    If &#181;(t) &lt; &#964;, the gain of any super-tree t' &#8839; t is no greater than &#964;, and therefore we can safely prune the search space spanned from the subtree t. If &#181;(t) &#8805; &#964;, in contrast, we cannot prune this space, since there might exist a super-tree t' &#8839; t such that gain(t') &#8805; &#964;.
    We can also prune the space with respect to the expanded single node s. Even if &#181;(t) &#8805; &#964; and a node s is attached to the tree t, we can ignore the space spanned from the tree t' if &#181;(s) &lt; &#964;, since no super-tree of s can yield optimal gain.
    Figure 4 presents a pseudo code of the algorithm Find Optimal Rule.
    The two pruning are marked with (1) and (2) respectively.
  
  
    Recent studies (Breiman, 1999; Schapire et al., 1997; R&#168;atsch et al., 2001) have shown that both Boosting and SVMs (Boser et al., 