k for contiguous subsequences discovered so far, like 2-5, 1.
    In each iteration, it shifts the next number from the input and repeatedly tries to reduce the top two elements on the stack if they are consecutive.
    See Algorithm 1 for details and Figure 5 for an example.
    260 Proof.
    &#8212;*: it is obvious that if the algorithm succeeds then a is binarizable using the binarization pattern recovered.
    +&#8212;: by a complete induction on n, the length of a.
    Base case: n = 1, trivial.
    Assume it holds for all n' &lt; n. If a is binarizable, then let a = (b; c) be its rightmost binarizable split.
    By the induction hypothesis, the algorithm succeeds on the partial input b, reducing it to the single element on the stack and recovering its binarization tree bi(b).
    Let c = c2).
    If is binarizable and triggers our binarizer to make a straight combination of (b; must be true that nation.
    We claim that c2 must be binarizable in this situation.
    So, (b, right of the rightmost binar