mework general enough to handle syntactic, semantic, and, ultimately, phonological constraints using identical functional procedures applied at the node level.
    The intent was to design a grammar for which the rules would be kept completely free of any constraints.
    To achieve this goal, we decided to break the constraint equations usually associated with rules down into their component parts, and then to attach constraints to nodes (i.e., categories) as equations in a single variable.
    The missing variable that must be unified with the new information would be made available by default.
    In effect, the constraint mechanism is thus reduced from a two-dimensional to a one-dimensional domain.
    Thus, for example, the developer would not be permitted to write an fstructure (Bresnan 1982) equation of the form [subj]Iilf = [np] associated with the rule [vp] &#8212;&gt; [verb] [np] Unf], to cover, &amp;quot;I told John to go.&amp;quot; Instead, the [np] node (regardless of its parent) would generate a