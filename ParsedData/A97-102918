ire system is implemented in C++, atop a &amp;quot;home-brewed&amp;quot;, general-purpose class library, providing a rapid code-compile-train-test cycle.
    In fact, many NLP systems suffer from a lack of software and computer-science engineering effort: runtime efficiency is key to performing numerous experiments, which, in turn, is key to improving performance.
    A system may have excellent performance on a given task, but if it takes long to compile and/or run on test data, the rate of improvement of that system will be miniscule compared to that which can run very efficiently.
    On a Sparc20 or SGI Indy with an appropritae amount of RAM, Nymble can compile in 10 minutes, train in 5 minutes and run at 6MB/hr.
    There were days in which we had as much as a 15% reduction in error rate, to borrow the performance measure used by the speech community, where error rate = 100% &#8212; Fmeasure.
    (See &#167;4.3 for the definition of F-measure.)
    In this section we report the results of evaluating the 