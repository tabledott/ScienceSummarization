This relational notation gives us a succinct way of describing the use of a corresponding transducer as either a generator or a recognizer.
    For example, if R is the regular relation recognized by the transducer in Figure 4, then R/intractable is the set of strings that R maps to intractable, namely {intractable, iNtractable}, as illustrated in Figure 7.
    Similarly, iNtractableIR is the set of strings {intractable} that R maps from iNtractable (Figure 5).
    We rely on the equivalence between regular languages and relations and their corresponding finite-state automata, and we frequently do not distinguish between them.
    When the correspondence between a language L and its equivalent machine must be made explicit, we let M(L) denote a finite-state machine that accepts L. Similarly, we let T(R) denote a transducer that accepts the relation R, as provided by the correspondence theorem.
    We also rely on several of the closure properties of regular languages (Hoperoft and Ullman 1979): for regular la