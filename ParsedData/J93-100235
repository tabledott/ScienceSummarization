ate a backbone grammar rule containing atomic categories, each atomic category being the name assigned to the category in the disjoint category set that unifies with the corresponding category in the unification grammar rule: for each rule R of form Cl -4 C2 Cn in unification grammar add a rule B of form 51 -4 B2 Bn to backbone grammar where Bi is the name assigned to the (single) category in disjoint-set which unifies with Ci, for i=1, n. For example, for the rules in Figure 3 (corresponding loosely to S NP VP, NP Vi and VP --&gt; Vt NP), step 1 would create the disjoint-set shown in Figure 4.
    (Note that the value for CASE on the NP categories in the grammar has 'collapsed' down to a Backbone parse tree for either kim or lee or sandy using rule N2 --&gt; N2 [CONJ EITHER], N2[CONJ OR] +. variable, but that the two V categories remain distinct).
    Figure 5 shows the backbone rules that would be built in step 2.
    Algorithms for creating LR parse tables assume that the terminal vocabulary of the grammar