s this problem, Denis and Baldridge (2008) apply an independently trained anaphoricity classifier to identify non-anaphoric NPs prior to ranking, and Rahman and Ng (2009) propose a model that jointly learns coreference and anaphoricity.
  
  
    Another thread of supervised coreference research concerns the development of linguistic features.
    Below we give an overview of these features.
    String-matching features can be computed robustly and typically contribute a lot to the performance of a coreference system.
    Besides simple string-matching operations such as exact string match, substring match, and head noun match for different kinds of NPs (see Daum&#180;e III and Marcu (2005)), slightly more sophisticated stringmatching facilities have been attempted, including minimum edit distance (Strube et al., 2002) and longest common subsequence (Casta&#732;no et al., 2002).
    Yang et al. (2004a) treat the two NPs involved as two bags of words, and compute their similarity using metrics commonly-used in