ation of Wedekind (1988) defines completeness and coherence of a generation algorithm as follows.
    Suppose a generator derives a string w from a logical form s, and the grammar assigns to w the logical form a.
    The generator is complete if s always subsumes a and coherent if a always subsumes s. The generator defined in Section 3.1 is not coherent or complete in this sense; it requires only that a and s be compatible, that is, unifiable.
    If the logical-form language and semantic interpretation system provide a sound treatment of variable binding and scope, abstraction and application, then completeness and coherence will be irrelevant because the logical form of any phrase will not contain free variables.
    However, neither semantic projections in lexical-functional grammar (LFG; Halvorsen and Kaplan 1988) nor definite-clause grammars provide the means for such a sound treatment: logical-form variables or missing arguments of predicates are both encoded as unbound variables (attributes with unspec