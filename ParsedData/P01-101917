ct mentioned earlier).
    Type raising also adds to the complexity.
    As standardly presented, Acalculus does not constrain grammars to be monotonic, and does not control accessibility, since the variable of the functor that is A-abstracted over may be arbitrarily deeply embedded inside a Aexpression.
    None of the previous work on unificationbased approaches to semantics has considered constraints on composition in the way we have presented.
    In fact, Nerbonne (1995) explicitly advocates nonmonotonicity.
    Moore (1989) is also concerned with formalizing existing practice in unification grammars (see also Alshawi, 1992), though he assumes Prolog-style unification, rather than TFSs.
    Moore attempts to formalize his approach in the logic of unification, but it is not clear this is entirely successful.
    He has to divorce the interpretation of the expressions from the notion of truth with respect to the model, which is much like treating the semantics as a description of a logic formula.
    Our s