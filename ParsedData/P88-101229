 then becomes the name of the predicate.
    The function Req returns the requirements associated with a predicate, and subst takes care of substituting the right arguments into the requirements.
    &lt;c&gt; is the list consisting of the single element c, and cons is the LISP function cons.
    The relations rel and nn are treated here as predicate variables, but they could be treated as predicate constants, in which case we would not have quantified over them.
    In this approach, s(0, n, e) can be read as saying there is an interpretable sentence from point 0 to point is (asserting e).
    Syntax is captured in predicates like np, vp, and s. Compositional semantics is encoded in, for example, the way the predicate p' is applied to its arguments in the first axiom, and in the lambda expression in the third argument of vp in the third axiom.
    Local pragmatics is captured by virtue of the fact that in order to prove s(0, n, e), one must derive the logical form of the sentence together with the constraint