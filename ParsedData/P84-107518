uistic information.
    The design was influenced by current theory and practice in computer science, and especially in the areas of programming language design and semantics.
    The formalism is simple (consisting of just one primitive operation, unification), powerful (although it can be constrained to be decidable), mathematically well-founded (with a complete denotational semantics), flexible (as demonstrated by its ability to model analyses in GPSG, LFG, DCG and other formalisms), modular (because of its higher-level notational devices such as templates and lexical rules), declarative (yielding orderindependence of operations), and implementable (as demonstrated by three quite dissimilar implemented systems and one highly developed programming environment).
    As we have emphasized herein, PATR-II seems to represent a convergence of techniques from several domains&#8212; computer science, programming language design, natural language processing and linguistics.
    Its positioning at the center of thes