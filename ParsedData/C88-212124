n  Comple- tor  tries to recognize the rest of the tree in which we predicted a substitution.
  The Earley-type parser can be extended to take advan- tage of  the lexicon-based strategy proposed earlier.
  Once the input string has been scanned and the corresponding elementary trees have been built, the parser will proceed bottom-up using the top-down filtering from the initial trees that have been built.
  In order to take into account that each tree is unique and therefore can be used only once, a new component r is added to the states.
  A state is now defined to be: s = [a, dot, side, pos, l, fl, fr, star, t~, b~, subst?, r] r encodes the trees corresponding to the input string that have not yet been used: r ~--- {{"/11, """ , ~lk},"" : ,  { ~ml,"""  , ~mk}} where {7i l ,  " ,7~j} is the set of trees generated by the lexical item a~.
  582 The left predictor must be modified so that it predicts only trees that are in the set F of the given state.
  As soon as one tree (say 7in) is used, the entire set of 