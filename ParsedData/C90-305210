B of the set of definitions augmented by the initial struc- ture [2].
  For example, the (typed) FS AGR[num:PLUR] is consistent with regard to the set of defini- tions above (Sect.l).
  The interpreter will ap- ply the definition of AGR at the root of the FS : AGR[num:PLUR] M num:NUM,gender:GEN] = AGR[nu nl:PLUR,geuder:GEN AGR[num:MASC] is an inconsistent (typed) FS : AGR[num:MASCJ I-1 [uum:NUM,gender:GEN] = I be- cause the types MASC ail(] NUM have only J_, the bottom of the lattice, ~s a common snl)type repre- senting inconsistent information.
  Note that this type checking process may introduce new type symbols also used for checking, thus defining a type inheri- tance mechanism.
  A full evaluation of APPEND[w:(A B}] produces a set of three FSs: i F: 0, ": ID(A B), w: ~]  v F: &lt;~A.
  : ~(B) ,  w: &lt;t~.
  :  r~0,~:  (@ ?
  (m .~&gt;)] 4 Typed un i f i ca t ion  grammars 4.1 DCGs In this section, we describe how one can (but should not) write grammars using this formalism.
  To make comparisons easier,