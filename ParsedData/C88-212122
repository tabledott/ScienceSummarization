iltering.
  It is able to parse constraints on ad- junction, substitution and feature structures for TAGs as defined by Vijay-Shanker (1987) and Vijay-Shanker and Joshi (1988).
  It is able to parse directly CFGs and TAGs.
  Thus it embeds the essential aspects of PATR-II as defined by Shieber (1984 and 1986).
  Its correctness was proven in Sehabes and Joshi (1988b).
  The concepts of dotted rule and states have been extended to TAG trees.
  The algo- rithm as described by Schabes and Joshi (1988a) manip- ulates states of the form: s = [a, dot, side, pos, l, fl, fi, star, t[, b[, snbst?]
  where a is a tree, dot is the address of the dot in the tree, side is the side of the symbol the dot is on (left or right), pos is the position of the dot (above or below), star is an address in a and l, f~, fr, star, t~, b~ are indices of positions in the input string.
  The variable subst?
  is a boolean that indicates whether the tree has been predicted for substi- tution.
  The algorithm uses nine processes: ?
  The Sc