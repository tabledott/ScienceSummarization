s, writing [[Q]] for the extension of Q (i.e., the set of objects that have the property Q), the intersection [[P1]] n &#183; &#183; &#183; n [[Pn]] must equal the singleton set {r}.
    It is a &#8220;hillclimbing&#8221; algorithm, which finds better and better approximations of the target set {r} by accumulating more and more properties&#8212;hence the term Incremental.
    There is no backtracking.
    Consequently, if some property Pi in L is made redundant by later additions (i.e., when ([[P1]] n &#183; &#183; &#183; n [[Pi &#8722; 1]] n [[Pi + 1]] n &#183; &#183; &#183; n [[Pn]]) C [[Pi]]), then Pi is retained as a member of L nevertheless.
    In the full algorithm (see below, D&amp;RAtt), properties are analyzed as pairs consisting of an Attribute and a Value.
    Attributes are ordered in a list A.
    If Ai precedes Aj in A, then Ai is &#8220;more preferred than&#8221; Aj; as a consequence, Ai will be considered before Aj by the algorithm.
    Suppose r is the target object, and D (the &#8220;domain