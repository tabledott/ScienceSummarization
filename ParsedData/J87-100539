 ;;; The function APPLY is implemented under the name APPLY-Q to avoid ;;; conflict with the CL function APPLY.
  
  
    This appendix includes informal proofs of some important properties of the nondeterminisitc version of the presented algorithm.
    First, we present a proof of the termination of the algorithm.
    Several criteria of the partial correctness of the algorithm are also informally shown, especially, that the algorithm does not generAte wffs with unbound variables.
    However, we do not prove correctness in the sense of showing that the algorithm is semantically sound, i.e., that it yields wffs with interpretations consistent with the interpretation of the input expression, simply because we do not provide a semantics for the input language.
    (The output language, of course, has a standard logical semantics.)
    We do not attempt to prove completeness for the algorithm, as the concept of completeness is open to interpretation, depending as it does on just which scopings one deems possibl