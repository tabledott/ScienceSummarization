lstudied synchronous grammar formalism.
    Terminal productions of the form A &#8212;* e/f produce a token in each stream, or a token in one stream with the null symbol 0 in the other.
    To allow for movement during translation, non-terminal productions can be either straight or inverted.
    Straight productions, with their non-terminals inside square brackets [...], produce their symbols in the given order in both streams.
    Inverted productions, indicated by angled brackets (...), are output in reverse order in the Foreign stream only.
    The work described here uses the binary bracketing ITG, which has a single non-terminal: This grammar admits an efficient bitext parsing algorithm, and holds no language-specific biases.
    (2) cannot represent all possible permutations of concepts that may occur during translation, because some permutations will require discontinuous constituents (Melamed, 2003).
    This ITG constraint is characterized by the two forbidden structures shown in Figure 1 (Wu, 1997).