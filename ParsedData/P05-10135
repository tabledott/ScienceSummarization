mation techniques used to projectivize and deprojectivize dependency graphs, and in section 3 we describe the data-driven dependency parser that is the core of our system.
    We then evaluate the approach in two steps.
    First, in section 4, we evaluate the graph transformation techniques in themselves, with data from the Prague Dependency Treebank and the Danish Dependency Treebank.
    In section 5, we then evaluate the entire parsing system by training and evaluating on data from the Prague Dependency Treebank.
  
  
    We assume that the goal in dependency parsing is to construct a labeled dependency graph of the kind depicted in Figure 1.
    Formally, we define dependency graphs as follows: 3.
    A graph D = (W, A) is well-formed iff it is acyclic and connected.
    If (wi, r, wj) E A, we say that wi is the head of wj and wj a dependent of wi.
    In the following, we use the notation wi wj to mean that (wi, r, wj) E A; r we also use wi wj to denote an arc with unspecified label and wi &#8212;*&#87