ete logical interpretation.
    For example, whether next to and state forms next to(state(&#183;)) or state(next to(&#183;)).
    Note that for all possible logical forms and alignments there exists a one-to-one mapping to these decisions.
    We frame the inference problem as an Integer Linear Programming (ILP) problem (Equation (2)) in which the first-order decisions are governed by &#945;cs, a binary decision variable indicating that constituent c is aligned with logical symbol s. And Qcs,dt capture the second-order decisions indicating the symbol t (associated with constituent d) is an argument to function s (associated with conIt is clear that there are dependencies between the &#945;-variables and Q-variables.
    For example, given that Qcs,dt is active, the corresponding &#945;variables &#945;cs and &#945;dt must also be active.
    In order to ensure a consistent solution we introduce a set of constraints on Equation (2).
    In addition we add constraints which leverage the typing information inher