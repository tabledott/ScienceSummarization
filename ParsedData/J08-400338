ts a list with head i and tail &#955;1, whereas j&#65533;&#955;2 represents a list with head j and tail &#955;2.4 We use square brackets for enumerated lists as before, and we write &#955;1.&#955;2 for the concatenation of &#955;1 and &#955;2, so that, for example, [0, 1].
    [2, 3, 4] = [0, 1, 2, 3, 4].
    The notational conventions for the buffer &#946; and the set A of dependency arcs are the same as before.
    A list-based transition system is a quadruple S = (C, T, cs, Ct), where A list-based parse of a sentence x = (w0, w1, ... , wn) starts with the artificial root node 0 as the sole element of &#955;1, an empty list &#955;2, all the nodes corresponding to real words in the buffer &#946;, and an empty set A of dependency arcs; it ends as soon as the buffer &#946; is empty.
    Thus, the only difference compared to the stack-based systems is that we have two lists instead of a single stack.
    Otherwise, both initialization and termination are Transitions for the non-projective, list-based parsing al