d from the logical form Input Trigger Output Category argmax(?x.flight(x) ? from(x, boston), ?x.cost(x)) constant c NP : c NP : boston arity one predicate p N : ?x.p(x) N : ?x.flight(x) arity one predicate p S\NP : ?x.p(x) S\NP : ?x.flight(x) arity two predicate p2 (S\NP )/NP : ?x.?y.p2(y, x) (S\NP )/NP : ?x.?y.from(y, x) arity two predicate p2 (S\NP )/NP : ?x.?y.p2(x, y) (S\NP )/NP : ?x.?y.from(x, y) arity one predicate p1 N/N : ?g.?x.p1(x) ? g(x) N/N : ?g.?x.flight(x) ? g(x) literal with arity two predicate p2 and constant second argument c N/N : ?g.?x.p2(x, c) ? g(x) N/N : ?g.?x.from(x, boston) ? g(x) arity two predicate p2 (N\N)/NP : ?y.?g.?x.p2(x, y) ? g(x) (N\N)/NP : ?y.?g.?x.from(x, y) ? g(x) an argmax /min with second argument arity one function f NP/N : ?g. argmax /min(g, ?x.f(x)) NP/N : ?g. argmax(g, ?x.cost(x)) arity one function f S/NP : ?x.f(x) S/NP : ?x.cost(x) arity one function f (N\N)/NP : ?y.?f.?x.g(x) ? f(x) &gt;/&lt; y (N\N)/NP : ?y.?f.?x.g(x) ? cost(x) &gt; y no trigger S/NP : ?x.x, S/N :