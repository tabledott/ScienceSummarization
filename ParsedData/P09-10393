 2007).
    Let us first describe formally the set of legal dependency parse trees.
    Consider a sentence x = hw0,... , wni, where wi denotes the word at the ith position, and w0 = $ is a wall symbol.
    We form the (complete1) directed graph D = hV, Ai, with vertices in V = {0, ... , n} (the i-th vertex corresponding to the i-th word) and arcs in A = V 2.
    Using terminology from graph theory, we say that B &#8838; A is an r-arborescence2 of the directed graph D if hV, Bi is a (directed) tree rooted at r. We define the set of legal dependency parse trees of x (denoted Y(x)) as the set of 0-arborescences of D, i.e., we admit each arborescence as a potential dependency tree.
    Let y &#8712; Y(x) be a legal dependency tree for x; if the arc a = hi, ji &#8712; y, we refer to i as the parent of j (denoted i = &#960;(j)) and j as a child of i.
    We also say that a is projective (in the sense of Kahane et al., 1998) if any vertex k in the span of a is reachable from i (in other words, if for any k satisfyi