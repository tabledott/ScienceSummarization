   The main reason for introducing this framework is to allow us to characterize algorithms that have previously been described in different traditions and to compare their formal properties within a single unified framework.
    In particular, whereas this type of framework has previously been used to characterize algorithms in the stackbased family (Nivre 2003, 2006b; Attardi 2006), it is here being used also for the listbased algorithms first discussed by Covington (2001).
  
  
    A transition system for dependency parsing is a quadruple S = (C, T, cs, Ct), where A configuration is required to contain at least a buffer &#946;, initially containing the nodes [1, ... , n] corresponding to the real words of a sentence x = (w0, w1, ... , wn), and a set A of dependency arcs, defined on the nodes in V = 10, 1,. .
    .
    , n}, given some set of dependency labels L. The specific transition systems defined in Sections 4 and 5 will extend this basic notion of configuration with different data structures, such a