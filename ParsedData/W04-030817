t all times, where AS is the restriction of A to 5, i.e.
    AS = {(wi, wj) E A|wi, wj E 51.
    Given this definition of incrementality, it is easy to show that structures (2&#8211;5) in Figure 4 can be parsed incrementally with the arc-eager algorithm as well as with the standard bottomup algorithm.
    However, with the new algorithm we can also parse structure (1) incrementally, as wj Initialization hnil, W, &#8709;i Termination hS, nil, Ai Left-Arc hwi|S, wj|I, Ai &#8594; hS, wj|I, A &#8746; {(wj, wi)}i &#172;&#8707;wk(wk, wi) &#8712; A Right-Arc hwi|S, wj|I, Ai &#8594; hwj|wi|S, I, A &#8746; {(wi, wj)}i &#172;&#8707;wk(wk, wj) &#8712; A Reduce hwi|S, I, Ai &#8594; hS, I, Ai &#8707;wj(wj, wi) &#8712; A Shift hS, wi|I, Ai &#8594; hwi|S, I, Ai is shown by the following transition sequence: hnil, abc, &#8709;i &#8595; (Shift) ha, bc, &#8709;i &#8595; (Right-Arc) hba, c, {(a, b)}i &#8595; (Right-Arc) hcba, nil, {(a, b), (b, c)}i We conclude that the arc-eager algorithm is optimal with respect to incrementali