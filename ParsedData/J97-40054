ld in turn.
    A limitation of this approach is that it permits one to specify only the average rate of re-entrancies; it does not permit one to specify more complex context dependencies.
    Eisele (1994) takes a logic-programming approach to constraint grammars.
    He assigns probabilities to proof trees by attaching parameters to logic program clauses.
    He presents the following logic program as an example: The probability of a proof tree is defined to be proportional to the product of the probabilities of clauses used in the proof.
    Normalization is necessary because some derivations lead to invalid proof trees.
    For example, the derivation is invalid because of the illegal assignment b = c. Both Brew and Eisele associate weights with analogues of rewrite rules.
    In Brew's case, we can view type expansion as a stochastic choice from a finite set of rules of form X where X is the type to expand and each 6 is a sequence of introduced child types.
    A re-entrancy decision is a stochastic choi