ions, con- junctions and conditional expressions of typed fea- ture structures.
  This introduction will start from a very simple DCG, and will show how one can write a DCG-like grammar in TFS, making use of the typing system to enforce general constraints valid for classes of objects and to modularize linguistic descriptions.
  We then show that further abstraction leads to a I-[PSG-like grammar.
  It is not our goal to give here a formal account of the formalism (the interested reader should refer to [2] where a very clear tbrmal semantics on which TFS is based is given), and we will use an informal approach wherever possible.
  2 Typed t~ature s t ructures  and unif ication Tlle basic data structure of tile language is a typed featme structure: a feature structure (FS in the fol- lowing) with which a type can be associated.
  Corn- pared to untyped FSs (as presented in [16] for exam- ple), the TFS system offers the possibility to name complex FSs, and to associate constraints with these names, thus definin