m adapted to our notation.
    First, consider the equivalence, We assume the rows and columns of Q0 are indexed from 1 so that the indexes of Q and Q0 coincide.
    To calculate ((i, j)k) when i, j &gt; 0, we can use the fact that &#8706; log |X|/Xij = (X&#8722;1)ji and that Zx and (Q0)&#8722;1 can both be calculated a single time, each taking O(n3).
    Using these values, each expectation is computed in O(1).
    Coupled with with the fact that we need to construct Q and compute the expectation for all |L|n2 possible edges, in total it takes O(n3 + |L|n2) time to compute all edge expectations.
    Projective dependency parsing algorithms are well understood due to their close connection to phrasebased chart parsing algorithms.
    The work of Eisner (1996) showed that the argmax problem for digraphs could be solved in O(n3) using a bottomup dynamic programming algorithm similar to CKY.
    Paskin (2001) presented an O(n3) inside-outside algorithm for projective dependency parsing using the Eisner algorithm