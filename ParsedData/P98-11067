90) and (Hudson, unpublished).
    This idea can also be compared to the notion of word order domain (Reape, 1990; Broker and Neuhaus, 1997), to the Slash feature of GPSG and HPSG, to the functional uncertainty of LFG, and to the Move-a of GB theory.
  
  
    We (informally) define a projective Dependency Grammar as a string-rewriting system3 by giving a set of categories such as N, V and Adv,4 a set of distinguished start categories (the root categories of well-formed trees), a mapping from strings to categories, and two types of rules: dependency rules which state hierarchical order (dominance) and LP rules which state linear order.
    The dependency rules are further subdivided into subcategorization rules (or s-rules) and modification rules (or m-rules).
    Here are some sample s-rules: LP rules are represented as regular expressions (actually, only a limited form of regular expressions) associated with each category.
    We use the hash sign (#) to denote the position of the governor (head).
    For e