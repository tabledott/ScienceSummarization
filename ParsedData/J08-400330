ng the first element from the buffer, and pushing or popping the stack.
    Theorem 3 The worst-case space complexity of the arc-standard, stack-based algorithm is O(n), where n is the length of the input sentence.
    Proof 3 Given the deterministic parsing algorithm, only one configuration c = (&#963;, &#946;,A) needs to be stored at any given time.
    Assuming that a single node can be stored in some constant space, the space needed to store &#963; and &#946;, respectively, is bounded by the number of nodes.
    The same holds for A, given that a single arc can be stored in constant space, because the number of arcs in a dependency forest is bounded by the number of nodes.
    Hence, the worst-case space complexity is O(n).
    &#9632; The transition set T for the arc-eager, stack-based parser is defined in Figure 5 and contains four types of transitions: 1.
    Transitions LEFT-ARCl (for any dependency label l) add a dependency arc (j, l, i) to A, where i is the node on top of the stack &#963; and j is t