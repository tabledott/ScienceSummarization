it will greatly contribute the progress of the syntax-based machine translation research.'
  
  
    When designing our toolkit, we applied general principles of software engineering to achieve three major goals: Extensibility, end-to-end coherence, and scalability.
    Extensibility: The Joshua code is organized into separate packages for each major aspect of functionality.
    In this way it is clear which files contribute to a given functionality and researchers can focus on a single package without worrying about the rest of the system.
    Moreover, to minimize the problems of unintended interactions and unseen dependencies, which is common hinderance to extensibility in large projects, all extensible components are defined by Java interfaces.
    Where there is a clear point of departure for research, a basic implementation of each interface is provided as an abstract class to minimize the work necessary for new extensions.
    End-to-end Cohesion: There are many components to a machine translation pipe