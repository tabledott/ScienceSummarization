 Furthermore, if the matrix evolves to include defeasible constraints, these tools will check which constraints get overridden and whether the value chosen is indeed common enough to be motivated as a default value.
    This evaluation in detail should be paired with feedback from the grammar engineers to determine why changes were made.
    The main goal of evaluation is, of course, to improve the matrix over time.
    This raises the question of how to propagate changes in the matrix to grammars based on earlier versions.
    The following three strategies (meant to be used in combination) seem promising: (i) segregate changes that are important to sync to (e.g., changes that affect MRS outputs, fundamental changes to important analyses), (ii) develop a methodology for communicating changes in the matrix, their motivation and their implementation to the user community, and (iii) develop tools for semi-automating resynching of existing grammars to upgrades of the matrix.
    These tools could use the type hi