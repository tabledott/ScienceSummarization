uch work, and list patients that, for example ical structures, but have a severely restricted vocabulary; i.e., have impaired lexical choice (these patients still have conceptual knowledge, they just have problems le)dcalizing it).
    The main engineering argument for arranging modules into a pipeline instead of a more complex structure is again simplicity and ease of debugging.
    In a one-way pipeline of N modules there are only N-1 interfaces between modules, while a pipeline with `two-way' information flow has 2(N-1) interfaces, and a system that fully connects each module with every .other module will have N(N-1) interfaces.
    A system that has a twoway interface between every possible pair of modules will undoubtably be able to handle many linguistic phenomena in a more powerful, elegant, principled, etc, manner than a system that arranges modules in a simple one-way pipeline; such a system will also, however, be much more difficult to build and (especially) debug.
    It is easy to argue that a one