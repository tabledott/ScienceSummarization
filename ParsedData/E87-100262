ld by, by definition, be its only contribution to phonological processes, I have cut myself off from any such deus ex machina.
    Linguists in general, and computational linguists in particular, do well to employ finite-state devices wherever possible.
    They are theoretically appealing because they are computational weak and best understood from a mathematical point of view.
    They are computationally appealing because they make for simple, elegant, and highly efficient implementaions.
    In this paper, I hope I have shown how they can be applied to a problem in nonconcatenative morphology which seems initially to require heavier machinary.
  

