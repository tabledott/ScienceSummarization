e lattices, the hypergraph implementation causes a small increase in running time.
    This increase is mainly due to the representation of line segments; while the phraselattice implementation stores a single backpointer, the hypergraph version stores a vector of backpointers.
    The last two columns show the average amount of time that is required to compute the upper envelope on hypergraphs.
    For comparison, we prune hypergraphs to the same density (# of edges per edge on the best path) and achieve identical running times for computing the error surface.
    We first compare the new lattice MBR (Algorithm 3) with MBR decoding on 1000-best lists and FSAMBR (Tromble et al., 2008) on lattices generated by the phrase-based systems; evaluation is done using both BLEU and average run-time per sentence (Table 3).
    Note that N-best MBR uses a sentence BLEU loss function.
    The new lattice MBR algorithm gives about the same performance as FSAMBR while yielding a 20X speedup.
    We next report the performa