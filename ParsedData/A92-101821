 Baum-Welch algorithm (equations 1-5) and the Viterbi algorithm (equation 6) involve operations on products of numbers constrained to be between 0 and 1.
    Since these products can easily underflow, measures must be taken to Now define &amp;t(i) = cicit(i) and use a' in place of a in equation 1 to define &amp; for the next iteration: Note that Ein_i eet(i) = 1 for 1 &lt; t &lt; T. Similarly, let OT(i) = OT(i) and define $t(i) = ct4t(i) for T &gt; t &gt; 1 where The scaled backward and forward probabilities, &amp; and 0-, can be exchanged for the unscaled probabilities in equations 3-5 without affecting the value of the ratios.
    To see this, note that &amp;t(i) = Cat(i) and 0t(i) where Now, in terms of the scaled probabilities, equation 5, for example, can be seen to be unchanged: A slight difficulty occurs in equation 3 that can be cured by the addition of a new term, ct+i, in each product of the upper sum: Numerical instability in the Viterbi algorithm can be ameliorated by operating on a logarithmic sc