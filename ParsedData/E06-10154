e classifier.
    This suggests that the many fragments included in the SST space are relevant and, since their manual design may be problematic (requiring a higher programming effort and deeper knowledge of the linguistic phenomenon), tree kernels provide a remarkable help in feature engineering.
    In the remainder of this paper, Section 2 describes the parse tree kernels and our fast algorithm.
    Section 3 introduces the predicate argument classification problem and its solution.
    Section 4 shows the comparative performance in term of the execution time and accuracy.
    Finally, Section 5 discusses the related work whereas Section 6 summarizes the conclusions.
  
  
    The kernels that we consider represent trees in terms of their substructures (fragments).
    These latter define feature spaces which, in turn, are mapped into vector spaces, e.g.
    R. The associated kernel function measures the similarity between two trees by counting the number of their common fragments.
    More precisely, a ke