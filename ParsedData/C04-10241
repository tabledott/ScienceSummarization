ich find the most probable anal ysis without examining the whole set of possible analyses (Charniak et al, 1998; Klein and Manning,2003a).
			These methods reduce the number of gener ated edges, but increase the amount of time needed for each edge.
			The parser described in this paper follows a contrary approach: instead of reducing the number of edges, it minimises the costs of building edges in terms of memory and runtime.The new parser, called BitPar, is based on a bit vector implementation (cf.
			(Graham et al, 1980)) of the well-known Cocke-Younger-Kasami (CKY) algorithm (Kasami, 1965; Younger, 1967).
			It buildsa compact ?parse forest?
			representation of all anal yses in two steps.
			In the first step, a CKY-style recogniser fills the chart with constituents.
			In the second step, the parse forest is built top-down from the chart.
			Viterbi parses are computed in four steps.
			Again, the first step is a CKY recogniser which is followed by a top-down filtering of the chart, the bottom-up computa