tation, bracketing, phrasal alignment, and other parsing tasks.
  
  
    A transduction grammar describes a structurally correlated pair of languages.
    For our purposes, the generative view is most convenient: the grammar generates transductions, so that two output streams are simultaneously generated, one for each language.
    This contrasts with the common input-output view popularized by both syntaxdirected transduction grammars and finite-state transducers.
    The generative view is more appropriate for our applications because the roles of the two languages are symmetrical, in contrast to the usual applications of syntax-directed transduction grammars.
    Moreover, the input-output view works better when a machine for accepting one of the languages (the input language) has a high degree of determinism, which is not the case here.
    Our transduction model is context-free, rather than finite-state.
    Finite-state transducers, or FSTs, are well known to be useful for specific tasks such as analys