] =6 C [s]).
    We need to identify the rules r that are influenced by the change s ! b (s).
    Let r be such a rule. f (r) needs to be updated if and only if there exists at least one sample s' such that Each of the above conditions corresponds to a specific update of the good (r) or bad (r) counts.
    We will discuss how rules which should get their good or bad counts decremented (subcases (1) and (2)) can be generated, the other two being derived in a very similar fashion.
    The key observation behind the proposed algorithm is: when investigating the effects of applying the rule b to sample s, only samples s' in the set V (s) need to be checked.
    Any sample s' that is not in the set {sIb changes s} can be ignored since s' = b(s').
    Let s' 2 V (s) be a sample in the vicinity of s. There are 2 cases to be examined one in which b applies to s' and one in which b does not: Case I: c (s') = c (b (s')) (b does not modify the classification of sample s').
    We note that the condition and the formula 