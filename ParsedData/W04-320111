rather than to words themselves.
    These parts correspond to the traditional notion of an edge in a tabular parser.
    Parts of the second type consist of CF-ruletuples (A &#8212;* B C, s, m, e, i).
    The tuple specifies a particular rule A &#8212;* B C, and its position, including split point m, within the sentence i, such as q in figure 1(b), and corresponds to the traditional notion of a traversal in a tabular parser.
    Note that parts for a basic PCFG model are not just rewrites (which can occur multiple times), but rather anchored items.
    Formally, we assume some countable set of parts, R. We also assume a function R which maps each object (x, y) E X x Y to a finite subset of R. Thus R(x, y) is the set of parts belonging to a particular parse.
    Equivalently, the function R(x, y) maps a derivation y to the set of parts which it includes.
    Because all rules are in binary-branching form, |R(x, y) |is constant across different derivations y for the same input sentence x.
    We assume that th