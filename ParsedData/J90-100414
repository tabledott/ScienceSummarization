ith respect to itself and all verbs so as to bring the lexical information that well-founds the ordering to bear on the ordering problem.
    In general, this is not a finite process, as the previous Dutch example reveals.
    This does not deny that compilation methods may be able to convert a grammar into a program that generates without termination problems.
    In fact, the partial execution techniques described by two of us (Pereira and Shieber 1985) could form the basis of a compiler built by partial execution of the new algorithm we propose below relative to a grammar.
    However, the compiler will not generate a program that generates top-down, as Strzalkowski's does. helpen voeren help feed In summary, top-down generation algorithms, even if controlled by the instantiation status of goals, can fail to terminate on certain grammars.
    The critical property of the example given above is that the well-foundedness of the generation process resides in lexical information unavailable to top-down regimes