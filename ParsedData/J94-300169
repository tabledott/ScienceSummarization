ty strings.
    We define { if&#8364;&#231;b - U 0 otherwise which contains exactly the same strings as 0 except that the singleton string 0 is included instead of the empty string that otherwise might be in the language.
    IP&#176; is defined similarly, and then the replacement operator is expressed in terms of these new regular languages: Now we can complete our definition of the left-context identifier: Left-context identifiers.
    As desired, the regular language denoted by this operator includes strings if and only if every substring belonging to A (ignoring /, r, and 0) is immediately followed by a bracket /.
    This effect is illustrated by the state-transition diagrams in Figure 10.
    The machine on the left is a minimal-state acceptor for the empty-context language Leftcontext(c, &lt;, &gt;).
    It accepts strings that have at least one &lt;, and every 0 or E symbol must be followed by a &lt;.
    The &gt;-labeled transitions represent the fact that &gt; is being ignored.
    The machine on th