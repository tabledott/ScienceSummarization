1ii, &#8226; &#8226; &#8226; &#8226; Yn3))= (Zi , &#8226; &#8226; &#8226; , Zk) M breaks xi , zk into substrings xi, , xn, and yi,...,y&amp;quot; conforming to the definition of fp.
    M spawns as many processes as there are ways of breaking up ri , .. &#8226; , zt, and rules with A on their left-hand-side.
    Each spawned process must check if xi , , xn, and , yn, can be derived from B and C, respectively.
    To do this, the x's and y's are stored in the next 2ni + 2n2 tapes, and M goes to a universal state.
    Two processes are spawned requiring B to derive z,.., and C to derive yi , , y,.
    Thus, for example, one successor process will be have M to be in the existential state qa with the indices encoding xi , , xn, in the first 2n i tapes.
    For rules p : A fpo such that fp is constant function, giving an elementary structure, fp is defined such that fp() = (Si ... xi() where each z is a constant string.
    M must enter a universal state and check that each of the k constant substrings are in the 