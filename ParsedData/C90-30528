
  in I&gt;ROLOG, the arguments of a term are identi- fied by their positions in the term, and the presence 2 of all arguments i mandatory.
  In an FS, arguments (feature vahles) are not identified by their position but by a label, the feature, and the absence of an attrilmte-value pair will denote any kind of value for this attribute (type T).
  Using the TFS syntax, where the symbol :- after an FS introduces a condition, a definition for append can be as follows: APPEND = iF: 0, iS: [i~LIST, W: [~]] V iF: ([XJ ?
  : []~L,ST, w: (~ .
  1i~1)] : -- APPEND[F: ~.t-~, 13: [~], W:  [~ ] .
  Note that the tagging syntax allows to specification of identity between structures and a partial instance of the structure.
  This possibility (together with the fact.
  that typing iv enforced by the system) allows the writing of a typed version of append, in contrast to the untyped PROLOG version.
  3.3 Type checking as deduct ion Contrary to PROLOG,  there is no distinction in TFS between top-level types (which could be in