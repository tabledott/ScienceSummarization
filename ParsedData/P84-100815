s concerned.
    For example, when [case: ace] is unified with with [case: -dal], the resulting matrix is simply [case: accl.
    The negative constraint is eliminated since there is no possibility that it could ever be violated later.
    This may be a wrong policy.
    It has to be modified to make generalization work as proposed in Section V for structures with negative constraints.
    If generalization is defined as we have suggested above, negative constraints must always be kept because they never become redundant for generalization.
    When negative or positive constraints are involved, unification obviously takes more time.
    Nevertheless, the basic algorithm remains pretty much the same.
    Allowing for constraints does not significantly reduce the speed at which values that do not have any get unified in the Texas implementation.
    In the course of working on the project, I gained one insight that perhaps should have been obvious from the very beginning: the problems that arise in this connec