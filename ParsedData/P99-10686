hat reduces each to a linear sequence of tokens corresponding to HTML markup elements, interspersed with tokens representing undifferentiated &amp;quot;chunks&amp;quot; of text.
    For example, the transducer would replace the HTML source text &lt;TITLE&gt;ACL '99 Conference Home Page&lt;/TITLE&gt; with the three tokens [BEGIN: TITLE], [Chunk:24], and [END: TITLE].
    The number inside the chunk token is the length of the text chunk, not counting whitespace; from this point on only the length of the text chunks is used, and therefore the structural filtering algorithm is completely language independent.
    Given the transducer's output for each document, the structural filtering stage aligns the two streams of tokens by applying a standard, widely available dynamic programming algorithm for finding an optimal alignment between two linear sequences.1 This alignment matches identical markup tokens to each other as much as possible, identifies runs of unmatched tokens that appear to exist only in one sequence