defines a data type for encoding finite state automata; and an interface for creating automata from regular expressions.
    Debugging time is an important factor in the toolkit&#8217;s ease of use.
    To reduce the amount of time students must spend debugging their code, we provide a type checking module, which can be used to ensure that functions are given valid arguments.
    The type checking module is used by all of the basic data types and processing classes.
    Since type checking is done explicitly, it can slow the toolkit down.
    However, when efficiency is an issue, type checking can be easily turned off; and with type checking is disabled, there is no performance penalty.
    Visualization modules define graphical interfaces for viewing and manipulating data structures, and graphical tools for experimenting with NLP tasks.
    The draw.tree module provides a simple graphical interface for displaying tree structures.
    The draw.tree edit module provides an interface for building and modifying 