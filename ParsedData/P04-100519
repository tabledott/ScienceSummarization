ng repair words; the weight on such trees is Pr(copy|M&#57739;i&#8722;1, R&#57739;i&#8722;1).
    Trees of the form (02) substitute a reparandum word for a repair word; their weight is Pr(subst|M&#57739;i&#8722;1, R&#57739;i&#8722;1)Pr(Mi|subst, M&#57739;i&#8722;1, R&#57739;i).
    Trees of the form (03) end a repair; their weight is Pr(nonrep|, M&#57739;i&#8722;1, R&#57739;i&#8722;1).
    Auxiliary trees of the form (03) end a repair; they are weighted Pr(nonrep|M&#57739;i&#8722;1, R&#57739;i&#8722;1).
    Auxiliary trees of the form (04) permit the repair word R&#57739;i&#8722;1 to be deleted in the reparandum; the weight of such a tree is Pr(del|M&#57739;i&#8722;1,R&#57739;i&#8722;1).
    Finally, auxiliary trees of the form (05) generate a reparandum word Mi is inserted; the weight of such a tree is Pr(ins|M&#57739;i&#8722;1, R&#57739;i&#8722;1)Pr(Mi|ins, M&#57739;i&#8722;1, R&#57739;i&#8722;1).
  
  
    The TAG just described is not probabilistic; informally, it does not include the probability costs fo