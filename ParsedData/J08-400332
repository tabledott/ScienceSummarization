c-standard sequence in Figure 4.
    Theorem 4 The arc-eager, stack-based algorithm is correct for the class of projective dependency forests.
    Arc-eager transition sequence for the English sentence in Figure 2.
    Nivre Deterministic Incremental Dependency Parsing Proof 4 To show the soundness of the algorithm, we show that the dependency graph defined by the initial configuration, Gc0(x) = (Vx, 0), is a projective dependency forest, and that every transition preserves this property.
    We consider each of the relevant conditions in turn, keeping in mind that the only transitions that modify the graph are LEFT-ARCl and RIGHT-ARCel.
    Basis: If &#8710;(p) = 0, then i and j are adjacent, which entails &#928;(p, i, j).
    Inductive step: We assume that &#928;(p, i, j) holds if &#8710;(p) &lt; q (for some q &gt; 0) and that &#8710;(p) = q + 1, and we concentrate on the transition tp that results in configuration cp.
    For the arc-eager algorithm, there are only two cases to consider, because if tp = RI