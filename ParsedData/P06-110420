milarity calculation mechanism (kernel function vs. dot-product).
    The main difference is the different feature spaces.
    Regarding the parse tree features, our method implicitly represents a parse tree by a vector of integer counts of each sub-tree type, i.e., we consider the entire sub-tree types and their occurring frequencies.
    In this way, the parse tree-related features (the path features and the chunking features) used in the featurebased methods are embedded (as a subset) in our feature space.
    Moreover, the in-between word features and the entity-related features used in the feature-based methods are also captured by the tree kernel and the entity kernel, respectively.
    Therefore our method has the potential of effectively capturing not only most of the previous flat features but also the useful syntactic structure features.
    (2) Compared with Previous Kernels: Since our method only counts the occurrence of each sub-tree without considering the layer and the ancestors of the root nod