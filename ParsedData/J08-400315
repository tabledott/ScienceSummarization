aphs depicted in Figures 1 and 2, we have: Both G1 and G2 are well-formed dependency forests (dependency trees, to be specific), but only G2 is projective.
    In G1, the arc (5, AuxP,1) spans node 3, which is not reachable from node 5 by following dependency arcs.
  
  
    In this section, we introduce a formal framework for the specification of deterministic dependency parsing algorithms in terms of two components: a transition system, which is nondeterministic in the general case, and an oracle, which always picks a single transition out of every parser configuration.
    The use of transition systems to study computation is a standard technique in theoretical computer science, which is here combined with the notion of oracles in order to characterize parsing algorithms with deterministic search.
    In data-driven dependency parsing, oracles normally take the form of classifiers, trained on treebank data, but they can also be defined in terms of grammars and heuristic disambiguation rules (Nivre 2003).
 