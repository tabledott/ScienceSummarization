 different articles within a basic cluster.
    This way, we can increase the number of basic patterns connected to each entity.
    Also, it allows us to give a weight to entities.
    We calculate their weights using the number of occurrences within a cluster and their position within an article.
    These entities are used to obtain basic patterns later.
    We also use a parser and tree normalizer to generate basic patterns.
    The format of basic patterns is crucial to performance.
    We think a basic pattern should be somewhat specific, since each pattern should capture an entity with some relevant context.
    But at the same time a basic pattern should be general enough to reduce data sparseness.
    We choose a predicate-argument structure as a natural solution for this problem.
    Compared to traditional constituent trees, a predicate-argument structure is a higher-level representation of sentences that has gained wide acceptance from the natural language community recently.
    In this paper we 