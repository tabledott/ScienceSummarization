;quot; (Thus every functor will get its arguments, if possible, before it becomes an argument itself.)
    But it is hardly obvious that (7) eliminates all of CCG 's spurious ambiguity.
    One might worry about unexpected interactions involving crossing composition rules like A/B B \C &#8211;4- A \ C. Significantly, it turns out that (7) really does suffice; the proof is in &#167;4.2.
    It is trivial to modify any sort of CCG parser to find only the normal-form parses.
    No semantics is necessary; simply block any rule use that would violate (7).
    In general, detecting violations will not hurt performance by more than a constant factor.
    Indeed, one might implement (7) by modifying CCG's phrase-structure grammar.
    Each ordinary CCG category is split into three categories that bear the respective tags from (9).
    The 24 templates schematized in (10) replace the two templates of (4).
    Any CFG-style method can still parse the resulting spuriosity-free grammar, with tagged parses as in (8).
   