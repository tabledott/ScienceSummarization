 to combine them using substitution and adjunction operations so as to yield a derivation that spans the input string.
    At the end of the second stage, the parser would not only have parsed the input, but would have associated a small set of (usually one) supertags with each word.
    The supertagger can be used as a front end to a lexicalized grammar parser so as to prune the search-space of the parser even before parsing begins.
    It should be clear that by reducing the number of supertags that are selected in the first stage, the search-space for the second stage can be reduced significantly and hence the parser can be made more efficient.
    Supertag disambiguation techniques, as discussed in the previous sections, attempt to disambiguate the supertags selected in the first pass, based on lexical preferences and local lexical dependencies, so as to ideally select one supertag for each word.
    Once the supertagger selects the appropriate supertag for each word, the second stage of the parser is nee