 subtree of the NF tree The present proofs for CCG establish a result that NF(#), fi1. cannot be the output of forward com- has long been suspected: the spurious ambiguity position, and is NF besides.
    Therefore a' is NF: problem is not actually very widespread in CCG. take NF(a) = a'.
    Theorem 2 says all cases of spurious ambiguity Theorem 2 remains true (&lt; 1 NF per reading). that their NFs have been previously computed.
    Whether theorem 1 (&gt; 1 NF per reading) remains Figure (1) gives an efficient CKY-style algorithm true depends on what set of rules is removed.
    For based on this insight.
    (Parsing strategies besides most linguistically reasonable choices, the proof of CKY would also work, in particular (Vijay-Shanker theorem 1 will go through,' so that the normal-form Si Weir, 1993)) The management of cached NFs in parser of &#167;4 remains safe.
    But imagine removing steps 9, 12, and especially 16 ensures that duplicate only the rule B/C C B: this leaves the string A/B NFs never en