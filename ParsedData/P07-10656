hat the number of functions k* that minimizes f is, m k* = ln 2 &#183; . n which leads to the intuitive result that exactly half the bits in the filter will be set to 1 when the optimal number of hash functions is chosen.
    The fundmental difference between a Bloom filter&#8217;s space requirements and that of any lossless representation of a set is that the former does not depend on the size of the (exponential) universe N from which the set is drawn.
    A lossless representation scheme (for example, a hash map, trie etc.) must depend on N since it assigns a distinct representation to each possible set drawn from the universe.
  
  
    In our experiments we make use of both standard (i.e.
    Boolean) BFs containing n-gram types drawn from a training corpus and a novel BF scheme, the log-frequency Bloom filter, that allows frequency information to be associated efficiently with items stored in the filter. return BF The efficiency of our scheme for storing n-gram statistics within a BF relies on the Zipf-