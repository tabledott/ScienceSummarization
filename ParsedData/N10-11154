 of much richer features than those available to transition- and especially to graph-based parsers, and greatly reduces the locality of transition-based algorithm decisions.
    On the other hand, it is still a greedy, best-first algorithm leading to an efficient implementation.
    We present a concrete O(nlogn) parsing algorithm, which significantly outperforms state-of-theart transition-based parsers, while closing the gap to graph-based parsers.
  
  
    When humans comprehend a natural language sentence, they arguably do it in an incremental, left-toright manner.
    However, when humans consciously annotate a sentence with syntactic structure, they hardly ever work in fixed left-to-right order.
    Rather, they start by building several isolated constituents by making easy and local attachment decisions and only then combine these constituents into bigger constituents, jumping back-and-forth over the sentence and proceeding from easy to harder phenomena to analyze.
    When getting to the harder decisi