 is unlikely that the two NP nodes have different attribute values which are referred to later by some tests in the augmentation.
    The same argument holds with the noun phrases: pregnant women and children large file equipment Although more comprehensive experiments are desired, it is expected that only a few packed nodes need to be unpacked in practical applications.
    It is in general very painful to create, extend, and modify augmentations written in Lisp.
    The Lisp functions should be generated automatically from more abstract specifications.
    We have implemented the LFG compiler that compiles augmentations in a higher level notation into Lisp functions.
    The notation is similar to the Lexical Functional Grammar (LFG) formalism (Bresnan and Kaplan 1982) and PATR-1I (Shieber 1984).
    An example of the LFG-like notation and its compiled Lisp function are shown in Figures 6.1 and 6.2.
    We generate only non-destructive functions with no side-effects to make sure that a process never alters 