t solver generates an f-structure.
	
	
			The Penn-II treebank employs CFG trees with addi tional ?functional?
			node annotations (such as -LOC,-TMP, -SBJ, -LGS, . . .
			) as well as traces and coin dexation (to indicate LDDs) as basic data structures.
			The f-structure annotation algorithm of (Cahill et 3LFGs may also involve morphological and semantic levels of representation.al., 2002) exploits configurational, categorial, Penn II ?functional?, local head and trace informationto annotate nodes with LFG feature-structure equa tions.
			A slightly adapted version of (Magerman, 1994)?s scheme automatically head-lexicalises the Penn-II trees.
			This partitions local subtrees of depth one (corresponding to CFG rules) into left and rightcontexts (relative to head).
			The annotation algo rithm is modular with four components (Figure 2): left-right (L-R) annotation principles (e.g. leftmost NP to right of V head of VP type rule is likely to be an object etc.); coordination annotation principles (separating th