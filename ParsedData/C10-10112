orithms that use several CPU cores, and feature selection that eliminates the features that do not improve accuracy.
			We employ, as a basis for our parser, the secondorder maximum spanning tree dependency pars ing algorithm of Carreras (2007).
			This algorithmfrequently reaches very good, or even the best la beled attachment scores, and was one of the most used parsing algorithms in the shared task 2009 of the Conference on Natural Language Learning (CoNLL) (Hajic?
			et al, 2009).
			We combined thisparsing algorithm with the passive-aggressive perceptron algorithm (Crammer et al, 2003; McDon ald et al, 2005; Crammer et al, 2006).
			A parser build out of these two algorithms provides a good baseline and starting point to improve upon the parsing and training times.
			The rest of the paper is structured as follows.
			In Section 2, we describe related work.
			In section 3, we analyze the time usage of the components of 89the parser.
			In Section 4, we introduce a new Kernel that resolves some of the bo