 of the rule body, respectively.
			I will now show the most straight-forward encoding of a categorial grammar in this notation.
			There are two types of constituent graphs.
			Constituent graphs for basic categories are of the following form: (5) N S Of course, there might be more features associated with the constituent: (6) /oe 7 N S Finite 3 Sg Derived constituents have graphs of the following form: (7) arg (t0b) Backward Functional Application (BFA) value -~ functor argument &lt; value &gt; = &lt; functor va l&gt; &lt;argument&gt; = &lt;functor a rg&gt; &lt;f lmctor d i r&gt; :--: Left.
			This is the graph associated with the VP likes Paul: in graph notation: (8) ,.
			/~ Left /~ agr ca~//pers / form cat/pers~nu m S Finite N 3 Sg It corresponds to the derived-category s mboh (9) S \ N form : Finite pers : 3 num: Sg (10a) and (10b) are the rules that combine constituents.
			As in tradit ional categorial grammars, two such rules sufice.
			(10a) Forward Functional Application (FFA) value -~ functor argu