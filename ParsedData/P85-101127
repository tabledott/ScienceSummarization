,l[, where ( i _&lt; m ~ p &lt; I or i &lt; m &lt; p_&lt;l )aad(m_&lt;j_&lt; k &lt; por to  &lt; j_&lt; k_&lt;p) .
  Since either m &gt; i or p &lt; I, contents of Alm,j,k,pl will be know?.
  Similarly, since either m &lt; j or k &lt; p, the co?re?re of A(i,m,p,l I would have been comp?tcd.
  Pmmlug wi th  Loead Const~mlnt4 So far,we have a~,samed that the give?
  grammar has ?o local constraints, If the grammar has local constraints, it is easy to modify the above algorithm to take care of them.
  Note that in Ca~e 5, if an adjunctio?
  occurs at a ?ode X, we add X again to the element of the array we are computing.
  This seems to be in co?trust with our definition of how to associate local constraints with the ?odes in a se?te?tial tree.
  We should have added the root of the auxiliary tree instead to the element of the array being computed, since so far u the local constraints are concerned,this ?ode decides the local constraints at this node in the derived tree.
  However, this scheme cannot be adopted i