F relation between businessman and U.S. where Operator &lt;t1, t2&gt; concatenates all the string elements in tokens t1 and t2 to produce a new token.
    So &#936;2 is a kernel that simply matches unigrams and bigrams between the seq sequences of two relation examples.
    The information this kernel provides is faithful to the text. where min_len is the length of the shorter link sequence in R1 and R2.
    &#936;3 is a kernel that matches token by token between the link sequences of two relation examples.
    Since relations often occur in a short context, we expect many of them have similar link sequences.
  
  
    &#968; 4 (R1 , R2)= Kpath (R1. path, R2 . path ), where Intuitively the dependency path connecting two arguments could provide a high level of syntactic regularization.
    However, a complete match of two dependency paths is rare.
    So this kernel matches the component arcs in two dependency paths in a pairwise fashion.
    Two arcs can match only when they are in the same direction.
    In 