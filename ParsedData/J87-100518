wed in the assignments; for example, let &lt;quant var restrict&gt; := term in (body) simultaneously binds quant, var, and restrict to the three corresponding components in term.
    The symbol &amp;quot;:=&amp;quot; is used for assignment. lambda is an anonymous-functionforming operator.
    Its syntax is lambda( (variable)).
    (body) where (variable) is free in (body).
    We assume lexical scoping in lambda expressions.
    The statement &amp;quot;return value&amp;quot; returns a value from a function.
    The binary function map (similar to LISP's mapcar) applies its second argument (a lambda expression) to each of the elements of its first argument (a list).
    It returns a corresponding list of the values of the individual applications.
    The function integers(lower,upper) returns a list of the integers in the range lower to upper, inclusive and in order (corresponding to APL's iota).
    The function length(list) is obvious.
    The expression list!n! returns the nth element of the list list.
    