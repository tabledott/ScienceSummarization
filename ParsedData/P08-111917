of the edge.
    Note that all of these measures rely only on incoming edges because a node does not acquire outgoing edges until it has already been selected as a trusted class member and used to acquire new instances.
    In the next section, we describe a two-step process for creating graphs that can take advantage of both incoming and outgoing edges.
    One way to try to confirm (or disconfirm) whether a candidate instance is a true class member is to see whether it can produce new candidate instances.
    If we instantiate our pattern with the candidate (i.e., &#8220;CLASS NAME such as CANDIDATE and *&#8221;) and successfully extract many new instances, then this is evidence that the candidate frequently occurs with the CLASS NAME in list constructions.
    We will refer to the ability of a candidate to generate new instances as its productivity.
    The previous bootstrapping algorithm uses a dynamically constructed graph that is constantly evolving as new nodes are selected and explored.
    Each node