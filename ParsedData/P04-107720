(i = 1; i &lt;= m; i++) For (j = 1; j &lt;= n; j++) If xi = yj Then // the length of consecutive matches at // position i-1 and j-1 Where c is the dynamic programming table, c(i,j) stores the WLCS score ending at word xi of X and yj of Y, w is the table storing the length of consecutive matches ended at c table position i and j, and f is a function of consecutive matches at the table position, c(i,j).
    Notice that by providing different weighting function f, we can parameterize the WLCS algorithm to assign different credit to consecutive in-sequence matches.
    The weighting function f must have the property that f(x+y) &gt; f(x) + f(y) for any positive integers x and y.
    In other words, consecutive matches are awarded more scores than non-consecutive matches.
    For example, f(k)=&#945;k &#8211; &#946; when k &gt;= 0, and &#945;, &#946; &gt; 0.
    This function charges a gap penalty of &#8211;&#946; for each non-consecutive n-gram sequences.
    Another possible function family is the polynomial fam