ins, and Sevaux 2002).
  Table 1 summarizes the transformations of common constraints (most are Boolean), which are revised from Gue?ret, Prins, and Sevaux (2002), and can be used for constructing complicated rules.
  Previous approaches usually rely on dynamic programming to resolve non- overlapping/embedding constraints (i.e., Constraint 4) when the constraint structure is sequential.
  However, they are not able to handle more expressive constraints such as those that take long-distance dependencies and counting dependencies into account (Roth and Yih 2005).
  The ILP approach, on the other hand, is flexible enough to handle more expressive and general constraints.
  Although solving an ILP problem is NP-hard in the worst case, with the help of today?s numerical packages, this problem can usually be solved very quickly in practice.
  For instance, in our experiments it only took about 10 minutes to solve the inference problem for 4,305 sentences, using Table 1 Rules of mapping constraints to linear (in)equ