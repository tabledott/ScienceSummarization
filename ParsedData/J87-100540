e, but we expect that the algorithm is complete in the sense that every permutation of quantifiers respecting the considerations in the introduction is generated.
    We also do not prove the nonredundancy of the nondeterminism in the algorithm, i.e., that the algorithm will not generate the same result along different nondeterministic paths, although we believe that the algorithm is nonredundant.
  
  
    We will use lower Greek letters (a, /3, ...) as variables ranging over expressions in the logical form language.
    We inductively define a metric p on expressions in the logical form language as follows: We will give an informal proof of termination for the nondeterministic algorithm by induction on this metric p. But first, we present without proof three simple but useful properties of the metric.
    Lemma 1 If a is a wff, then p(a) = 0 if and only if a contains no complex terms.
    Lemma 2 If a is a wff and 0 is a subexpression of a and p(a) &gt; 0, then p(P) &lt; p(a) Lemma 3 If a is a wff and /3 is