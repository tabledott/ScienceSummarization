Consider the grammar where q =1 - p. This highly ambiguous grammar generates strings of any number of a's, using all possible binary parse trees over the given number of terminals.
    The states involved in parsing the string aaa are listed in Table 2, along with their forward and inner probabilities.
    The example illustrates how the parser deals with left-recursion and the merging of alternative sub-parses during completion.
    Since the grammar has only a single nonterminal, the left-corner matrix PL has rank 1: Consequently, the example trace shows the factor p-1 being introduced into the forward probability terms in the prediction steps.
    The sample string can be parsed as either (a(aa)) or ((aa)a), each parse having a probability of p3q2.
    The total string probability is thus 2p3q2, the computed a and -y values for the final state.
    The a values for the scanned states in sets 1, 2, and 3 are the prefix probabilities for a, aa, and aaa, respectively: P(S 41, a) = 1, P(S L aa) = q, Earley cha