at the domain contains one or more objects other than the target object, the so-called distractors: thus, r E D but {r} =&#65533; D. Return Failure {All properties in P have been tested, and still C =&#65533; {r}} Assuming (as do Dale and Reiter [1995]) that the tests in the body of the loop take some constant amount of time, the worst-case running time is on the order of na (i.e., O(na)), where na is the total number of properties.
    So, the algorithm has only linear complexity.
    A slightly closer approximation of Full Brevity can be achieved if Attributes and Values are separated (Dale and Reiter 1995), allowing the algorithm to choose the &#8220;best&#8221; Value for each Attribute.
    Given an Attribute, FindBestValue selects the Value that removes most distractors while still including the target r. If no Value includes r, the function returns nil.
    In case of a tie (i.e., no Value removes more distractors than all others), FindBestValue chooses the least specific of the contestants.
    For exa