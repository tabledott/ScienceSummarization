ompari son operations.
			In contrast, the worst case scenario for a pattern with a single gap, bookended on either side by the most frequent word, requires over two million operations using our baseline algorithm and over thirteen million using the algorithm of Rahman et al (2006).
			A single frequent word in an input sentence is enough to cause noticeable slowdowns, since it can appear in up to 530 hierarchical rules.To analyze the cost empirically, we ran our base line algorithm on the first 50 sentences of the NIST Chinese-English 2003 test set and measured the CPU time taken to compute collocations.
			We foundthat, on average, it took 2241.25 seconds (?37 min utes) per sentence just to compute all of the needed collocations.
			By comparison, decoding time persentence is roughly 10 seconds with moderately ag gressive pruning, using the Python implementation of Chiang (2007).
	
	
			Clearly, looking up patterns in this way is not prac tical.
			To analyze the problem, we measured the amount of CPU time 