he language, and non-trivial lexicor fragments for English, German and Latin have been developed and tested.
  
  
    The syntax of DATR, especially the use of value terminated attribute trees to encode information derives from PATR (Shieber 1986).
    The language consists of strings of symbols drawn from the se S'YM = {:, &amp;quot;, =, ==, &lt;, &gt;, (, )} and the set: ATOM and NODE, all of which are disjoint.
    A string is in DATR, (with respect to given set: ATOM of [atom]s and NODE of [node]s) if it is [sentence] as defined by the following set 01 rules: There are two kinds of sentence, those containing `-==' and those containing `='.
    Both kinds have on their left-hand side a node: path specification, where a path is a sequence of atoms enclosed in &lt;...&gt;.
    Pragmatically, the `==3 sentences are intended for defining the network, whilst the '=' statements express the values at individual nodes.
    Put another way, the former provide the database definition language whilst the latter prov