use of the baseline enumeration procedure: for each block , we additionally enumerate all its left and right predecessors .
    No optimal block segmentation is needed to compute the predecessors: for each block , we check for adjacent predecessor blocks that also occur in the enumeration list.
    We compute left orientation counts as follows: Here, we enumerate all adjacent predecessors of block over all training sentence pairs.
    The identity of is ignored. is the number of times the block succeeds some right adjacent predecessor block .
    The &#8217;right&#8217; orientation count is defined accordingly.
    Note, that in general the unigram count : during enumeration, a block might have both left and right adjacent predecessors, either a left or a right adjacent predecessor, or no adjacent predecessors at all.
    The orientation count collection is illustrated in Fig.
    2: each time a block has a left or right adjacent predecessor in the parallel training data, the orientation counts are incremente