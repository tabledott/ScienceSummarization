ions and many have already been used in teaching.
  
  
    NLTK provides a simple, extensible, uniform framework for assignments, projects, and class demonstrations.
    It is well documented, easy to learn, and simple to use.
    We hope that NLTK will allow computational linguistics classes to include more hands-on experience with using and building NLP components and systems.
    NLTK is unique in its combination of three factors.
    First, it was deliberately designed as courseware and gives pedagogical goals primary status.
    Second, its target audience consists of both linguists and computer scientists, and it is accessible and challenging at many levels of prior computational skill.
    Finally, it is based on an object-oriented scripting language supporting rapid prototyping and literate programming.
    We plan to continue extending the breadth of materials covered by the toolkit.
    We are currently working on NLTK modules for Hidden Markov Models, language modeling, and tree adjoining grammars