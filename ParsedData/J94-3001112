 rewriting systems were used to translate this notation into the equivalent regular relations and corresponding transducers, and thus to create a compiler for a more intuitive and more tractable two-level rule notation.
    Ritchie (1992) summarizes aspects of this analysis as presented by Kaplan (1988).
    Ritchie et al. (1992) describe a program that interprets this notation by introducing and manipulating labels assigned to the states of component finitestate machines.
    Since these labels have no simple set-theoretic significance, such an approach does not illuminate the formal properties of the system and does not make it easy to combine two-level systems with other formal devices.
    Ignoring some notational details, a grammar of two-level rules (as opposed to fsts) includes a specification of a set of &amp;quot;feasible pairs&amp;quot; of symbols that we denote by 7r.
    The pairs in 7 contain all the alphabet symbols and 0, but do not contain E except possibly when it is paired with itself in &#8