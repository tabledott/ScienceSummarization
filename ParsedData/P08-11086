ch arc.
    We call this system MSTParser, or simply MST for short, which is also the name of the freely available implementation.2 Transition-based dependency parsing systems use a model parameterized over transitions of an abstract machine for deriving dependency graphs, such that every transition sequence from the designated initial configuration to some terminal configuration derives a valid dependency graph.
    Given a real-valued score function s(c, t) (for transition t out of configuration c), parsing can be performed by starting from the initial configuration and taking the optimal transition t* = arg maxtET s(c, t) out of every configuration c until a terminal configuration is reached.
    This can be seen as a greedy search for the optimal dependency graph, based on a sequence of locally optimal decisions in terms of the transition system.
    Many transition systems for data-driven dependency parsing are inspired by shift-reduce parsing, where each configuration c contains a stack Q, for storing p