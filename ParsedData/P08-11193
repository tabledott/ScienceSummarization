phrase) is popular if it was discovered many times by other words (or phrases) in a hyponym pattern.
    A candidate word is productive if it frequently leads to the discovery of other words.
    Together, these two measures capture not only frequency of occurrence, but also crosschecking that the word occurs both near the class name and near other class members.
    We present two algorithms that use hyponym pattern linkage graphs (HPLGs) to represent popularity and productivity information.
    The first method uses a dynamically constructed HPLG to assess the popularity of each candidate and steer the bootstrapping process.
    This approach produces an efficient bootstrapping process that performs reasonably well, but it cannot take advantage of productivity information because of the dynamic nature of the process.
    The second method is a two-step procedure that begins with an exhaustive pattern search that acquires popularity and productivity information about candidate instances.
    The candidates a