 this approach is also able to deal with dynamic scenes; it can track changes in the workspace (which is required for handling the assembly process).
    Another issue that we have not discussed in much detail is linguistic realization.
    How should the information contained in a referring graph be expressed in natural language?
    So far, we have assumed that a distinguishing graph can simply be constructed first and subsequently fed into a realization engine.
    There may, however, be certain dependencies between content selection and realization (see, e.g., Horacek [1997] and Krahmer and Theune [2002]).
    One way to take these dependencies into account would be to reformulate the cost function in such a way that it promotes graphs that can easily be realized and punishes graphs that are more difficult to realize.
    A final aspect of the graph model that deserves further investigation is based on the fact that we can look at a graph such as that in Figure 3 as a Kripke model.
    Kripke models are u